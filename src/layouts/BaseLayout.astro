---
import "../styles/global.scss";
import { Icon } from "astro-icon/components";
import { ClientRouter } from "astro:transitions";
import { AstroFont } from "astro-font";
import { Content, Lang, LangLabels } from "../i18n/i18n";
import { Inconsolata } from "../constants/fonts";

export interface Props {
  lang: Lang;
  pageTitle?: string;
}

const { lang, pageTitle } = Astro.props;
const coreContent = Content[lang].core;

function getI18nUrl(lang: Lang): string {
  let { pathname } = Astro.url;
  Object.values(Lang).forEach((lang) => {
    if (pathname.startsWith(`/${lang}/`)) {
      pathname = Astro.url.pathname.slice(
        lang.length + 1,
        Astro.url.pathname.length,
      );
    }
  });
  return lang === Lang.En ? pathname : `/${lang}${pathname}`;
}
---

<!doctype html>
<html lang={lang} class="text-darkgray text-lg font-medium">
  <!--suppress HtmlRequiredTitleElement -->
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    {
      pageTitle ? (
        <title>
          {pageTitle} | {coreContent.siteTitle}
        </title>
      ) : (
        <title>{coreContent.siteTitle}</title>
      )
    }
    <ClientRouter />
    <AstroFont config={[Inconsolata]}/>
  </head>
  <body class="w-dvw h-dvh flex flex-col justify-center relative">
    <div
      class="flex items-center justify-between h-10 px-2 sm:px-5 text-darkgray/60 tracking-tighter absolute w-full top-0 transition-colors"
    >
      <div class="flex gap-x-2 text-xs sm:text-sm">
        {
          Object.values(Lang).map((_lang) => (
            <a
              class={lang == _lang ? "text-darkgray" : "hover:text-darkgray"}
              href={getI18nUrl(_lang)}
            >
              {LangLabels[_lang]}
            </a>
          ))
        }
      </div>

      <a
        class="hover:text-darkgray flex items-center text-xs sm:text-sm"
        href="https://github.com/nipsysdev/personal-website"
        target="_blank"
      >
        <Icon name="mdi:github" size="1rem" />&nbsp;{coreContent.sourceCode}
      </a>
    </div>

    <div
      class="flex-auto flex items-center justify-center pt-10 px-2 pb-2 sm:px-5 sm:pb-5 lg:p-14"
    >
      <slot />
    </div>
  </body>
</html>
